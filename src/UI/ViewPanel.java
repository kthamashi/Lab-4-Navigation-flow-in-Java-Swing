/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.User;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author thamashikumarasinghe
 */
public class ViewPanel extends javax.swing.JPanel {

    /**
     * Creates new form Form
     */
    private User newUser;
    public ViewPanel(User newUser) {
        initComponents();
        this.newUser = newUser;
        populateData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGroup = new javax.swing.ButtonGroup();
        headingLabel = new javax.swing.JLabel();
        firstnameLabel = new javax.swing.JLabel();
        firstnameTxtField = new javax.swing.JTextField();
        lastnameLabel = new javax.swing.JLabel();
        lastnameTxtField = new javax.swing.JTextField();
        ageLabel = new javax.swing.JLabel();
        ageTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailTxtField = new javax.swing.JTextField();
        messageLabel = new javax.swing.JLabel();
        messageTxtField = new javax.swing.JTextField();
        firstnameValidation = new javax.swing.JLabel();
        lastnameValidation = new javax.swing.JLabel();
        ageValidation = new javax.swing.JLabel();
        messageValidation = new javax.swing.JLabel();
        emailValidation = new javax.swing.JLabel();
        imageIconLabel = new javax.swing.JLabel();
        patientTypeLabel = new javax.swing.JLabel();
        patientTypeCombo = new javax.swing.JComboBox<>();
        genderLabel = new javax.swing.JLabel();
        patientTypeValidation = new javax.swing.JLabel();
        Male = new javax.swing.JRadioButton();
        Female = new javax.swing.JRadioButton();
        notPrefered = new javax.swing.JRadioButton();
        genderValidation = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));

        headingLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        headingLabel.setText("View Details");

        firstnameLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        firstnameLabel.setText("First name");

        firstnameTxtField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstnameTxtFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstnameTxtFieldFocusLost(evt);
            }
        });
        firstnameTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                firstnameTxtFieldMouseExited(evt);
            }
        });

        lastnameLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lastnameLabel.setText("Last name");

        lastnameTxtField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lastnameTxtFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastnameTxtFieldFocusLost(evt);
            }
        });

        ageLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        ageLabel.setText("Age");

        ageTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ageTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ageTextFieldFocusLost(evt);
            }
        });

        emailLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        emailLabel.setText("Email");

        emailTxtField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailTxtFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailTxtFieldFocusLost(evt);
            }
        });

        messageLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        messageLabel.setText("Message");

        messageTxtField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                messageTxtFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                messageTxtFieldFocusLost(evt);
            }
        });

        firstnameValidation.setForeground(new java.awt.Color(255, 0, 0));

        lastnameValidation.setForeground(new java.awt.Color(255, 0, 0));

        ageValidation.setForeground(new java.awt.Color(255, 0, 51));

        messageValidation.setForeground(new java.awt.Color(255, 0, 0));

        emailValidation.setForeground(new java.awt.Color(255, 0, 0));

        patientTypeLabel.setText("PatientType");

        patientTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Indoor", "Outdoor", " " }));
        patientTypeCombo.setSelectedIndex(-1);
        patientTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientTypeComboActionPerformed(evt);
            }
        });

        genderLabel.setText("Gender");

        patientTypeValidation.setForeground(new java.awt.Color(255, 0, 0));

        genderGroup.add(Male);
        Male.setText("Male");
        Male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaleActionPerformed(evt);
            }
        });

        genderGroup.add(Female);
        Female.setText("Female");

        genderGroup.add(notPrefered);
        notPrefered.setText("Prefer not to say");

        genderValidation.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imageIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstnameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(headingLabel)
                            .addComponent(firstnameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastnameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastnameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTypeValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Male)
                                .addGap(59, 59, 59)
                                .addComponent(Female)
                                .addGap(51, 51, 51)
                                .addComponent(notPrefered))
                            .addComponent(genderValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(firstnameLabel)
                    .addComponent(lastnameLabel)
                    .addComponent(ageLabel)
                    .addComponent(emailLabel)
                    .addComponent(messageLabel)
                    .addComponent(patientTypeLabel)
                    .addComponent(genderLabel))
                .addGap(0, 135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(headingLabel)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(firstnameLabel)
                    .addComponent(firstnameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(firstnameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lastnameLabel)
                    .addComponent(lastnameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastnameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(ageLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ageValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(emailLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageLabel)
                    .addComponent(messageTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientTypeLabel)
                    .addComponent(patientTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientTypeValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderLabel)
                    .addComponent(Male)
                    .addComponent(Female)
                    .addComponent(notPrefered))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(genderValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(imageIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void firstnameTxtFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstnameTxtFieldFocusGained
        // TODO add your handling code here:
        firstnameValidation.setText("");
    }//GEN-LAST:event_firstnameTxtFieldFocusGained

    private void firstnameTxtFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstnameTxtFieldFocusLost
        // TODO add your handling code here:
        if (firstnameTxtField.getText() == null || firstnameTxtField.getText().isEmpty()) {
            firstnameValidation.setText("First name is empty");
        }
    }//GEN-LAST:event_firstnameTxtFieldFocusLost

    private void firstnameTxtFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstnameTxtFieldMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_firstnameTxtFieldMouseExited

    private void lastnameTxtFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastnameTxtFieldFocusGained
        // TODO add your handling code here:
        lastnameValidation.setText("");
    }//GEN-LAST:event_lastnameTxtFieldFocusGained

    private void lastnameTxtFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastnameTxtFieldFocusLost
        // TODO add your handling code here:
        if (lastnameTxtField.getText() == null || lastnameTxtField.getText().isEmpty()) {
            lastnameValidation.setText("Last name is empty");
        }
    }//GEN-LAST:event_lastnameTxtFieldFocusLost

    private void ageTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageTextFieldFocusGained
        // TODO add your handling code here:
        ageValidation.setText("");
    }//GEN-LAST:event_ageTextFieldFocusGained

    private void ageTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageTextFieldFocusLost
        // TODO add your handling code here:
        try {
            if (ageTextField.getText() == null || ageTextField.getText().isEmpty()) {
                ageValidation.setText("Age is empty");
            } else if (ageTextField.getText().length() > 3) {
                ageValidation.setText("Age is invalid. Please enter a valid age!");
            } else {
                for (int i = 0; i < ageTextField.getText().length(); i++) {
                    if (Character.isDigit(ageTextField.getText().charAt(i)) == false) {
                        ageValidation.setText("Age contains invalid characters. Please enter a valid age!");
                    }
                }

            }

        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event_ageTextFieldFocusLost

    private void emailTxtFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTxtFieldFocusGained
        // TODO add your handling code here:
        emailValidation.setText("");
    }//GEN-LAST:event_emailTxtFieldFocusGained

    private void emailTxtFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTxtFieldFocusLost
        // TODO add your handling code here:
        Pattern pattern = Pattern.compile("^(.+)@(.+)$");
        if (emailTxtField.getText() == null || emailTxtField.getText().isEmpty()) {
            emailValidation.setText("Email is empty");
        } else if (!pattern.matcher(emailTxtField.getText()).matches()) {
            emailValidation.setText("Email is Invalid. Enter a valid email");

        }
    }//GEN-LAST:event_emailTxtFieldFocusLost

    private void messageTxtFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_messageTxtFieldFocusGained
        // TODO add your handling code here:
        messageValidation.setText("");
    }//GEN-LAST:event_messageTxtFieldFocusGained

    private void messageTxtFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_messageTxtFieldFocusLost
        // TODO add your handling code here:
        if (messageTxtField.getText() == null || messageTxtField.getText().isEmpty()) {
            messageValidation.setText("Message is empty");
        }
    }//GEN-LAST:event_messageTxtFieldFocusLost
    public static BufferedImage scaleImage(int w, int h, BufferedImage img) throws Exception {
        BufferedImage bi;
        bi = new BufferedImage(w, h, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(img, 0, 0, w, h, null);
        g2d.dispose();
        return bi;
    }
    private void patientTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientTypeComboActionPerformed

    private void MaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MaleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Female;
    private javax.swing.JRadioButton Male;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JLabel ageValidation;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTxtField;
    private javax.swing.JLabel emailValidation;
    private javax.swing.JLabel firstnameLabel;
    private javax.swing.JTextField firstnameTxtField;
    private javax.swing.JLabel firstnameValidation;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel genderValidation;
    private javax.swing.JLabel headingLabel;
    private javax.swing.JLabel imageIconLabel;
    private javax.swing.JLabel lastnameLabel;
    private javax.swing.JTextField lastnameTxtField;
    private javax.swing.JLabel lastnameValidation;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextField messageTxtField;
    private javax.swing.JLabel messageValidation;
    private javax.swing.JRadioButton notPrefered;
    private javax.swing.JComboBox<String> patientTypeCombo;
    private javax.swing.JLabel patientTypeLabel;
    private javax.swing.JLabel patientTypeValidation;
    // End of variables declaration//GEN-END:variables

    private void populateData() {
        firstnameTxtField.setText(this.newUser.getFirstName());
        lastnameTxtField.setText(this.newUser.getLastName());
        ageTextField.setText(this.newUser.getAge());
        emailTxtField.setText(this.newUser.getEmail());
        messageTxtField.setText(this.newUser.getMessage());
//        genderGroup.getSelection().setActionCommand(this.newUser.getGender());
        patientTypeCombo.setSelectedItem(this.newUser.getPatientType());
        imageIconLabel.setIcon(newUser.getPic());
        String gender = newUser.getGender();
        if (gender.equals("Male")) {
            Male.setSelected(true);
        } else if (gender.equals("Female")) {
            Female.setSelected(true);
        } else {
            notPrefered.setSelected(true);
        }
        
    }
}
